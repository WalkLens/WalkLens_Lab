<?xml version="1.0"?>
<doc>
    <assembly>
        "Microsoft.MixedReality.QR.DotNet"
    </assembly>
    <members>
        <member name="M:Microsoft.MixedReality.QR.QRCodeUpdatedEventArgs.Code">
            <summary>
Gets the QR Code that was updated
</summary>
        </member>
        <member name="T:Microsoft.MixedReality.QR.QRCodeUpdatedEventArgs">
            <summary>
Information about an updated QR Code.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeRemovedEventArgs.Code">
            <summary>
Gets the QR Code that was removed
</summary>
        </member>
        <member name="T:Microsoft.MixedReality.QR.QRCodeRemovedEventArgs">
            <summary>
Information about a removed QR Code.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeAddedEventArgs.Code">
            <summary>
Gets the QR Code that was added
</summary>
        </member>
        <member name="T:Microsoft.MixedReality.QR.QRCodeAddedEventArgs">
            <summary>
Information about a discovered QR Code.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeWatcher.GetList">
            <summary>
Get the list of QR codes detected.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeWatcher.Stop">
            <summary>
Stops tracking QR codes.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeWatcher.Start">
            <summary>
Starts tracking QR codes
Start should only be called once the RequestAccessAsync has succeeded.
Should not be called if the feature is not supported, check the IsSupported to see 
if this feature is supported.
Raises exceptions E_ACCESSDENIED, E_NOT_VALID_STATE, ERROR_NOT_SUPPORTED
</summary>
        </member>
        <member name="E:Microsoft.MixedReality.QR.QRCodeWatcher.EnumerationCompleted">
            <summary>
Event representing the Enumeration of QR Codes completed.
</summary>
        </member>
        <member name="E:Microsoft.MixedReality.QR.QRCodeWatcher.Removed">
            <summary>
Event representing the removal of a QR Code.
</summary>
        </member>
        <member name="E:Microsoft.MixedReality.QR.QRCodeWatcher.Updated">
            <summary>
Event representing the update of a QR Code.
</summary>
        </member>
        <member name="E:Microsoft.MixedReality.QR.QRCodeWatcher.Added">
            <summary>
Event representing the addition of a QR Code.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeWatcher.RequestAccessAsync">
            <summary>
Request the required access permissions to use QR Codes feature.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeWatcher.IsSupported">
            <summary>
Is QR Codes feature supported.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCodeWatcher.#ctor">
            <summary>
Constructs a new QRCodeWatcher.
</summary>
        </member>
        <member name="T:Microsoft.MixedReality.QR.QRCodeWatcher">
            <summary>
QRCodeWatcher
</summary>
        </member>
        <member name="T:wil.err_returncode_policy">
@endcond
</member>
        <member name="M:wil.DLLMain(HINSTANCE__*,System.UInt32!System.Runtime.CompilerServices.IsLong,System.Void*)">
Forward your DLLMain to this function so that WIL can have visibility into whether a DLL unload is because
    of termination or normal unload.  Note that when g_pfnDllShutdownInProgress is set, WIL attempts to make this
    determination on its own without this callback.  Suppressing private APIs requires use of this. 
</member>
        <member name="M:wil.ProcessShutdownInProgress">
@endcond
</member>
        <member name="M:wil.WilInitialize_ResultMacros_DesktopOrSystem_SuppressPrivateApiUse">
@endcond
</member>
        <member name="T:wil.details.shared_buffer">
@cond
</member>
        <member name="M:wil.GetFailureLogString(System.Char*,System.UInt64,wil.FailureInfo!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
@endcond
</member>
        <member name="T:wil.SupportedExceptions">
Use with functions and macros that allow customizing which kinds of exceptions are handled.
    This is used with methods like wil::ResultFromException and wil::ResultFromExceptionDebug. 
</member>
        <member name="D:size_t">
@endcond
</member>
        <member name="D:NTSTATUS">
@cond
</member>
        <member name="T:wil.variadic_logical_or{}">
@cond
</member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.GetRawData(System.Byte[]@)">
            <summary>
QR code RawData this is the error corrected raw data bytes.
Used when the platform is unable to decode the encoding and user can
decode as needed.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.RawDataSize">
            <summary>
Size of the RawData of this QR code.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.LastDetectedTime">
            <summary>
QR code last detected time.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.SystemRelativeLastDetectedTime">
            <summary>
QR code last detected system relative time in 100ns ticks.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.Data">
            <summary>
QR code Data.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.PhysicalSideLength">
            <summary>
Physical width or height of this QR code in Meters.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.Version">
            <summary>
VersionInfo of this QR code. Version 1 -40 are regular QRCodes and 41-44 are the Micro QRCode 1-4
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.SpatialGraphNodeId">
            <summary>
Spatial graph node id that for this QR code to create a coordinate system.
</summary>
        </member>
        <member name="M:Microsoft.MixedReality.QR.QRCode.Id">
            <summary>
Unique id that identifies this QR code for this session.
</summary>
        </member>
        <member name="T:Microsoft.MixedReality.QR.QRCode">
            <summary>
Encapsulates information about a QR code
</summary>
        </member>
    </members>
</doc>